#include <iostream>
using namespace std;

int f(int n) {
	if (n == 0)
		return 0;
	if (n == 1 || n == 2 || n == 3)
		return 1;
	return f(n - 1) + f(n - 2) + f(n - 3);
}

int main()
{
	int n;
	cin >> n;
	cout << f(n);
}


#include <iostream>
using namespace std;

int f(int i, int a[], int n) {
	if (i == n - 1)
		return a[i];
	else
		return a[i] * f(i + 1, a, n);
}

int main()
{
	int n;
	cin >> n;
	int* mas = new int[n];
	for (int i = 0; i < n; i++)
		cin >> mas[i];
	cout << f(1, mas, n);
}

#include <iostream>
using namespace std;

int f(int a, int b) {
	if (a == 0 || b == 0)
		return a + b;
	if (a > b)
		return f(a - b, b);
	else
		return f(a, b - a);
}

int main()
{
	int x, y;
	cin >> x >> y;
	cout << f(x, y);
}

#include <iostream>
using namespace std;

int f(int x, int y) {
	if (x == y)
		return 1;
	if (x > y)
		return 0;
	if (x < y)
		return f(x+3, y) + f(x+5, y);
}

int main()
{
	int a, b;
	cin >> b;
	cout << f(0, b);
}
