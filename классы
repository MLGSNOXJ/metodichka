#include <iostream>
#include <math.h>
#include <string>
using namespace std;
class IntArray {
private:
    int* arr;
    int size;
public:
    IntArray(int n) {
        arr = new int[n];
        size = n;
    }
    void input() {
        for (int i = 0; i < size; i++) {
            cout << "Enter element " << i + 1 << ": ";
            cin >> arr[i];
        }
    }
    void output() {
        for (int i = 0; i < size; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
    void sort() {
        for (int i = 0; i < size - 1; i++) {
            for (int j = i + 1; j < size; j++) {
                if (arr[i] > arr[j]) {
                    int temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
    }
    int getSize() {
        return size;
    }
    int sum() {
        int sum = 0;
        for (int i = 0; i < size; i++) {
            sum += arr[i];
        }
        return sum;
    }
    IntArray operator++() {
        for (int i = 0; i < size; i++) {
            arr[i]++;
        }
        return *this;
    }
    IntArray operator--() {
        for (int i = 0; i < size; i++) {
            arr[i]--;
        }
        return *this;
    }
    IntArray operator*(int scalar) {
        IntArray result(size);
        for (int i = 0; i < size; i++) {
            result.arr[i] = arr[i] * scalar;
        }
        return result;
    }
};

int main() {
    int n;
    cout << "Enter size of array: ";
    cin >> n;
    IntArray array(n);
    array.input();
    cout << "Array: ";
    array.output();
    cout << "Sorted array: ";
    array.sort();
    array.output();
    cout << "Size of array: " << array.getSize() << endl;
    cout << "Sum of array: " << array.sum() << endl;
    cout << "Array after increment: ";
    ++array;
    array.output();
    cout << "Array after decrement: ";
    --array;
    array.output();
    int scalar;
    cout << "Enter scalar: ";
    cin >> scalar;
    IntArray result = array * scalar;
    cout << "Array after multiplication with scalar: ";
    result.output();
    return 0;
}
